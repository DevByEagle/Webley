{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Webley","text":"<p>Webley is a modern, lightweight Python web framework designed for speed, simplicity, and developer-friendly design.</p> <p>Webley makes building web applications straightforward while giving you the flexibility to customize routes, handle requests directly, and control responses. Its minimalistic approach allows you to focus on what really matters\u2014your application logic\u2014without unnecessary boilerplate.</p>"},{"location":"api-reference/","title":"API Reference","text":""},{"location":"api-reference/#summary","title":"Summary","text":""},{"location":"api-reference/#packages","title":"Packages","text":"Package Description <code>webley.http</code> Core HTTP request and response classes."},{"location":"api-reference/#types","title":"Types","text":""},{"location":"api-reference/#httprequest","title":"<code>HttpRequest</code>","text":"<p>Represents an HTTP request received by the Webley server.</p> <pre><code>interface HttpRequest {\n    path: string;\n    method: string;\n}\n</code></pre>"},{"location":"api-reference/#properties","title":"Properties","text":"Attribute Description Default <code>path</code> The URL path of the request (e.g., <code>\"/\"</code>, <code>\"/users\"</code>). <code>\"\"</code> <code>method</code> The HTTP method used for the request (e.g., <code>\"GET\"</code>, <code>\"POST\"</code>). <code>None</code>"},{"location":"api-reference/#httpresponse","title":"<code>HttpResponse</code>","text":"<p>Represents an HTTP response returned to the client.</p> <pre><code>interface HttpResponse {\n    status_code: number;\n    headers: Array&lt;string, string&gt;;\n    content: byte;\n}\n</code></pre>"},{"location":"api-reference/#properties_1","title":"Properties","text":"Attribute Description Default <code>status_code</code> The HTTP status code (e.g., <code>200</code>, <code>404</code>, <code>500</code>). <code>200</code> <code>headers</code> The response headers included in the reply. <code>{}</code> <code>content</code> The response body, sent as bytes. <code>b\"\"</code>"},{"location":"api-reference/#methods-functions","title":"Methods / Functions","text":""},{"location":"api-reference/#webley","title":"Module: [<code>webley</code>]","text":"run(address: string, port: int): <code>None</code> Starts the Webley development server at the specified address and port. route(path: string): <code>Callable</code> A decorator that registers a function as a route handler for the given path."},{"location":"api-reference/#webley-http-reponse","title":"Module: [<code>webley.http.HttpResponse</code>]","text":"text(): <code>string</code> Returns the content of the response as a UTF-8 decoded string."},{"location":"api-reference/#methods","title":"Methods","text":""},{"location":"api-reference/#httpresponsetext","title":"<code>HttpResponse.text</code>","text":"<p>Returns the content of the response as a UTF-8 decoded string.</p>"},{"location":"api-reference/#returns","title":"Returns","text":"string"},{"location":"installation/","title":"Installation","text":"<p>Installing Webley is straightforward and requires minimal setup. It runs on Python 3.10+ without any extra configuration.</p>"},{"location":"installation/#pypi","title":"Installing via PyPI Recommended","text":"<p>The easiest way to install Webley is through PyPI. It\u2019s a one-line command with no additional downloads required.</p> <ol> <li> <p>Open your terminal or command prompt.</p> </li> <li> <p>Run the installation command:</p> <pre><code>pip install webley\n</code></pre> </li> <li> <p>Verify the installation:</p> <pre><code>python -c \"import webley; print('Webley version:', webley.__version__)\"\n</code></pre> </li> </ol> <p>Tip</p> <p>To keep your project dependencies isolated, consider using a virtual environment:</p> <pre><code>python -m venv env\nsource env/bin/activate  # macOS/Linux\nenv\\Scripts\\activate     # Windows\npip install webley\n</code></pre>"},{"location":"installation/#github","title":"Installing from GitHub Development Version","text":"<p>For the latest features or if you plan to contribute to Webley, you can install directly from GitHub. This gives you access to updates before they are released on PyPI.</p> <ol> <li> <p>Clone the repository:</p> <pre><code>git clone https://github.com/DevByEagle/Webley.git\ncd Webley\n</code></pre> </li> <li> <p>Install Webley:</p> <pre><code>pip install .\n</code></pre> </li> <li> <p>Verify the installation:</p> <pre><code>python -c \"import webley; print('Webley version:', webley.__version__)\"\n</code></pre> </li> </ol> <p>Info</p> <p>Installing from GitHub is ideal for testing cutting-edge features. For most users, PyPI remains the recommended option.</p>"},{"location":"usage/","title":"Usage","text":"<p>After installing Webley, building and customizing web applications is straightforward.</p> <p>For installation instructions, see Installation.</p> <p>Note</p> <p>Refer to the API Reference for complete details on Webley\u2019s classes, methods, and utilities, and learn how to leverage Webley\u2019s full capabilities.</p>"},{"location":"usage/#customization","title":"Customization","text":"<p>Webley offers extensive flexibility through configuration options, allowing you to tailor routing, responses, middleware, and more to your project\u2019s needs.</p> <p>Some configurable features include:</p> <ul> <li>Route parameters and URL parsing</li> </ul> <p>These are just a few examples\u2014more options can be found in the API Reference.</p>"},{"location":"usage/#defining-routes","title":"Defining Routes","text":"<p>Webley makes it simple to define routes and return HTTP responses. Here\u2019s a quick example that responds with \"Hello, Webley!\" when visiting the root URL:</p> Hello Webley App<pre><code>import webley as wb\n\n@wb.route(\"/\")\ndef home(request):\n    return wb.http.HttpResponse(b\"&lt;h1&gt;Hello, Webley!&lt;/h1&gt;\")\n\nwb.run()\n</code></pre> <p>For a detailed overview of Webley classes like <code>HttpRequest</code> and <code>HttpResponse</code>, along with routing, middleware, and response options, see the API Reference.</p>"}]}